{"version":3,"sources":["index.js"],"names":["dotenv","require","config","path","colors","connectDB","express","fileUpload","allowedOrigins","app","use","cors","origin","callback","includes","Error","credentials","useTempFiles","json","limit","urlencoded","extended","process","env","PORT","req","res","console","log","listen","Date","toLocaleString","bgCyan","bold","underline"],"mappings":"aAAA,IAAMA,OAASC,QAAQ,UAAUC,SAC3BC,KAAOF,QAAQ,QADfD,QAASC,QAAQ,WAGjBG,OAASH,QAAQ,UAFjBE,KAAOF,QAAQ,QAIfI,UAAYJ,QAAQ,wBAHFA,QAAxB,6BAAMK,sBAAAA,aAKAC,WAAaN,QAAQ,sBAH3BI,YACA,IAAMA,IAAAA,UAQAG,eAAiB,CACrB,wBACA,0BACA,yCAEFC,IAAIC,IAAIC,KAAK,CARbN,OAAS,SAAAO,EAAAC,IAGHL,GAAcA,eAClBM,SAAAF,GAIEF,EAAS,MAAA,GAETG,EAAA,IAAAE,MAAA,yBAGCC,aAAM,KASXP,IAAIC,IAdJH,WAYA,CACAU,cAAA,KAGIA,IAAAA,IAAAA,QAAcC,KAAA,CAAAC,MAAA,UADLV,IADbC,IAAAJ,QAAAc,WAAA,CAAAD,MAAA,OAAAE,UAAA,KAKuBF,IAAAA,KAAOG,QAAAC,IAAAC,MAAA,KAC9Bf,IAAIC,IAAIJ,cAAqBa,IAAAA,IAAK,aAAPlB,QAAA,wBAAiBoB,IAAAA,IAAAA,QAAUpB,QAAA,+BAA3BQ,IAA3BC,IAAA,QAAAT,QAAA,2BAEAQ,IAAMe,IAAI,QAAGF,QAAYE,0BAIzBf,IAAIC,IAAI,IAAA,SAAAe,EAASxB,GACjBQ,EAAIC,KAAI,uBAKNgB,IAAAA,OAASF,KAAA,WAAA,OADXG,QAAAC,IAIIC,4CAAAA,OAAaL,KAAbK,QAAAA,QAAa,IAAAC,MAAAC,eAAA,UAAjBC,OAAAC,KAAAC","file":"index.min.js","sourcesContent":["const dotenv = require('dotenv').config()\r\nconst path = require('path')\r\nconst express = require('express')\r\nconst colors = require('colors')\r\nconst cors = require('cors')\r\nconst connectDB = require('./config/db')\r\nconst { errorHandler } = require('./middleware/errorHandler')\r\nconst fileUpload = require('express-fileupload')\r\n\r\n\r\nconnectDB()\r\n\r\nconst app = express()\r\nconst allowedOrigins = [\r\n  'http://localhost:5173',\r\n  'http://192.168.1.3:5173',\r\n  'https://fintrak-frontend.onrender.com'\r\n]\r\napp.use(cors({\r\n  origin: function (origin, callback) {\r\n    // Allow requests with no origin (e.g., mobile apps or curl requests)\r\n    if (!origin || allowedOrigins.includes(origin)) {\r\n      callback(null, true)\r\n    } else {\r\n      callback(new Error('Not allowed by CORS'))\r\n    }\r\n  },\r\n  credentials: true, // only if using cookies/auth\r\n  }\r\n))\r\n//app.options('*', cors())\r\n// Enable CORS\r\napp.use(\r\n  fileUpload({\r\n    useTempFiles: true,\r\n  })\r\n)\r\napp.use(express.json({ limit: '50mb' }))\r\napp.use(express.urlencoded({ limit: '50mb', extended: true }))\r\n\r\nconst PORT = process.env.PORT || 8080\r\n\r\napp.use(errorHandler)\r\napp.use('/api/users', require('./routes/userRoutes'))\r\napp.use('/api/', require('./routes/transactionRoutes'))\r\napp.use('/api/', require('./routes/requestRoutes'))\r\napp.use('/api/', require('./routes/uploadRoutes'))\r\n\r\n\r\napp.get('/', (req, res) => {\r\n  res.send('api is running...')\r\n})\r\n\r\napp.listen(PORT, () =>\r\n  console.log(\r\n    `Server Running on Port: http://localhost:${PORT} at ${new Date().toLocaleString(\r\n      'en-US'\r\n    )}`.bgCyan.bold.underline\r\n  )\r\n)\r\n"]}