{"version":3,"sources":["index.js"],"names":["dotenv","require","config","path","express","colors","cors","connectDB","errorHandler","fileUpload","app","use","origin","credentials","options","useTempFiles","json","limit","urlencoded","extended","PORT","process","env","get","req","res","send","listen","console","log","Date","toLocaleString","bgCyan","bold","underline"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,EAAf;;AACA,IAAMC,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMM,SAAS,GAAGN,OAAO,CAAC,aAAD,CAAzB;;eACyBA,OAAO,CAAC,2BAAD,C;IAAxBO,Y,YAAAA,Y;;AACR,IAAMC,UAAU,GAAGR,OAAO,CAAC,oBAAD,CAA1B;;AAGAM,SAAS;AAET,IAAMG,GAAG,GAAGN,OAAO,EAAnB;AACAM,GAAG,CAACC,GAAJ,CAAQL,IAAI,CACV;AACEM,EAAAA,MAAM,EAAE,uCADV;AAEAC,EAAAA,WAAW,EAAE,IAFb,CAEmB;;AAFnB,CADU,CAAZ;AAMAH,GAAG,CAACI,OAAJ,CAAY,GAAZ,EAAiBR,IAAI,EAArB,E,CACA;;AACAI,GAAG,CAACC,GAAJ,CACEF,UAAU,CAAC;AACTM,EAAAA,YAAY,EAAE;AADL,CAAD,CADZ;AAKAL,GAAG,CAACC,GAAJ,CAAQP,OAAO,CAACY,IAAR,CAAa;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAb,CAAR;AACAP,GAAG,CAACC,GAAJ,CAAQP,OAAO,CAACc,UAAR,CAAmB;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBE,EAAAA,QAAQ,EAAE;AAA3B,CAAnB,CAAR;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAV,GAAG,CAACC,GAAJ,CAAQH,YAAR;AACAE,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBV,OAAO,CAAC,qBAAD,CAA7B;AACAS,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBV,OAAO,CAAC,4BAAD,CAAxB;AACAS,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBV,OAAO,CAAC,wBAAD,CAAxB;AACAS,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBV,OAAO,CAAC,uBAAD,CAAxB;AAGAS,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,mBAAT;AACD,CAFD;AAIAhB,GAAG,CAACiB,MAAJ,CAAWP,IAAX,EAAiB;AAAA,SACfQ,OAAO,CAACC,GAAR,CACE,mDAA4CT,IAA5C,iBAAuD,IAAIU,IAAJ,GAAWC,cAAX,CACrD,OADqD,CAAvD,EAEIC,MAFJ,CAEWC,IAFX,CAEgBC,SAHlB,CADe;AAAA,CAAjB","sourcesContent":["const dotenv = require('dotenv').config()\r\nconst path = require('path')\r\nconst express = require('express')\r\nconst colors = require('colors')\r\nconst cors = require('cors')\r\nconst connectDB = require('./config/db')\r\nconst { errorHandler } = require('./middleware/errorHandler')\r\nconst fileUpload = require('express-fileupload')\r\n\r\n\r\nconnectDB()\r\n\r\nconst app = express()\r\napp.use(cors(\r\n  {\r\n    origin: 'https://fintrak-frontend.onrender.com',\r\n  credentials: true, // only if using cookies/auth\r\n  }\r\n))\r\napp.options('*', cors())\r\n// Enable CORS\r\napp.use(\r\n  fileUpload({\r\n    useTempFiles: true,\r\n  })\r\n)\r\napp.use(express.json({ limit: '50mb' }))\r\napp.use(express.urlencoded({ limit: '50mb', extended: true }))\r\n\r\nconst PORT = process.env.PORT || 8080\r\n\r\napp.use(errorHandler)\r\napp.use('/api/users', require('./routes/userRoutes'))\r\napp.use('/api/', require('./routes/transactionRoutes'))\r\napp.use('/api/', require('./routes/requestRoutes'))\r\napp.use('/api/', require('./routes/uploadRoutes'))\r\n\r\n\r\napp.get('/', (req, res) => {\r\n  res.send('api is running...')\r\n})\r\n\r\napp.listen(PORT, () =>\r\n  console.log(\r\n    `Server Running on Port: http://localhost:${PORT} at ${new Date().toLocaleString(\r\n      'en-US'\r\n    )}`.bgCyan.bold.underline\r\n  )\r\n)\r\n"],"file":"index.dev.js"}