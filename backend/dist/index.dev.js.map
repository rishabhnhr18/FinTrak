{"version":3,"sources":["index.js"],"names":["dotenv","require","config","path","express","colors","cors","connectDB","errorHandler","fileUpload","app","allowedOrigins","use","origin","callback","includes","Error","credentials","useTempFiles","json","limit","urlencoded","extended","PORT","process","env","get","req","res","send","listen","console","log","Date","toLocaleString","bgCyan","bold","underline"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,EAAf;;AACA,IAAMC,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMM,SAAS,GAAGN,OAAO,CAAC,aAAD,CAAzB;;eACyBA,OAAO,CAAC,2BAAD,C;IAAxBO,Y,YAAAA,Y;;AACR,IAAMC,UAAU,GAAGR,OAAO,CAAC,oBAAD,CAA1B;;AAGAM,SAAS;AAET,IAAMG,GAAG,GAAGN,OAAO,EAAnB;AACA,IAAMO,cAAc,GAAG,CACrB,uBADqB,EAErB,yBAFqB,EAGrB,uCAHqB,CAAvB;AAKAD,GAAG,CAACE,GAAJ,CAAQN,IAAI,CAAC;AACXO,EAAAA,MAAM,EAAE,gBAAUA,OAAV,EAAkBC,QAAlB,EAA4B;AAClC;AACA,QAAI,CAACD,OAAD,IAAWF,cAAc,CAACI,QAAf,CAAwBF,OAAxB,CAAf,EAAgD;AAC9CC,MAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,qBAAV,CAAD,CAAR;AACD;AACF,GARU;AASXC,EAAAA,WAAW,EAAE,IATF,CASQ;;AATR,CAAD,CAAZ,E,CAYA;AACA;;AACAP,GAAG,CAACE,GAAJ,CACEH,UAAU,CAAC;AACTS,EAAAA,YAAY,EAAE;AADL,CAAD,CADZ;AAKAR,GAAG,CAACE,GAAJ,CAAQR,OAAO,CAACe,IAAR,CAAa;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAb,CAAR;AACAV,GAAG,CAACE,GAAJ,CAAQR,OAAO,CAACiB,UAAR,CAAmB;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBE,EAAAA,QAAQ,EAAE;AAA3B,CAAnB,CAAR;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAb,GAAG,CAACE,GAAJ,CAAQJ,YAAR;AACAE,GAAG,CAACE,GAAJ,CAAQ,YAAR,EAAsBX,OAAO,CAAC,qBAAD,CAA7B;AACAS,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiBX,OAAO,CAAC,4BAAD,CAAxB;AACAS,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiBX,OAAO,CAAC,wBAAD,CAAxB;AACAS,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiBX,OAAO,CAAC,uBAAD,CAAxB;AAGAS,GAAG,CAACgB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,mBAAT;AACD,CAFD;AAIAnB,GAAG,CAACoB,MAAJ,CAAWP,IAAX,EAAiB;AAAA,SACfQ,OAAO,CAACC,GAAR,CACE,mDAA4CT,IAA5C,iBAAuD,IAAIU,IAAJ,GAAWC,cAAX,CACrD,OADqD,CAAvD,EAEIC,MAFJ,CAEWC,IAFX,CAEgBC,SAHlB,CADe;AAAA,CAAjB","sourcesContent":["const dotenv = require('dotenv').config()\r\nconst path = require('path')\r\nconst express = require('express')\r\nconst colors = require('colors')\r\nconst cors = require('cors')\r\nconst connectDB = require('./config/db')\r\nconst { errorHandler } = require('./middleware/errorHandler')\r\nconst fileUpload = require('express-fileupload')\r\n\r\n\r\nconnectDB()\r\n\r\nconst app = express()\r\nconst allowedOrigins = [\r\n  'http://localhost:5173',\r\n  'http://192.168.1.3:5173',\r\n  'https://fintrak-frontend.onrender.com'\r\n]\r\napp.use(cors({\r\n  origin: function (origin, callback) {\r\n    // Allow requests with no origin (e.g., mobile apps or curl requests)\r\n    if (!origin || allowedOrigins.includes(origin)) {\r\n      callback(null, true)\r\n    } else {\r\n      callback(new Error('Not allowed by CORS'))\r\n    }\r\n  },\r\n  credentials: true, // only if using cookies/auth\r\n  }\r\n))\r\n//app.options('*', cors())\r\n// Enable CORS\r\napp.use(\r\n  fileUpload({\r\n    useTempFiles: true,\r\n  })\r\n)\r\napp.use(express.json({ limit: '50mb' }))\r\napp.use(express.urlencoded({ limit: '50mb', extended: true }))\r\n\r\nconst PORT = process.env.PORT || 8080\r\n\r\napp.use(errorHandler)\r\napp.use('/api/users', require('./routes/userRoutes'))\r\napp.use('/api/', require('./routes/transactionRoutes'))\r\napp.use('/api/', require('./routes/requestRoutes'))\r\napp.use('/api/', require('./routes/uploadRoutes'))\r\n\r\n\r\napp.get('/', (req, res) => {\r\n  res.send('api is running...')\r\n})\r\n\r\napp.listen(PORT, () =>\r\n  console.log(\r\n    `Server Running on Port: http://localhost:${PORT} at ${new Date().toLocaleString(\r\n      'en-US'\r\n    )}`.bgCyan.bold.underline\r\n  )\r\n)\r\n"],"file":"index.dev.js"}