"use strict";var asyncHandler=require("express-async-handler"),Request=require("../models/requestModal"),Transaction=require("../models/transactionModal"),User=require("../models/userModal"),crypto=require("crypto"),requestAmount=asyncHandler(function(t,r){var n,a,s,u,c,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.body,a=n.receiver,s=n.amount,u=n.description,e.next=3,regeneratorRuntime.awrap(User.findById(a));case 3:if(c=e.sent,t.user._id!=a&&c){e.next=7;break}throw r.status(400),new Error("Request not sent");case 7:if(a&&s&&u){e.next=10;break}throw r.status(400),new Error("Please include all fields");case 10:return i=new Request({sender:t.user._id,receiver:a,amount:s,description:u}),e.next=13,regeneratorRuntime.awrap(i.save());case 13:return e.next=15,regeneratorRuntime.awrap(User.findByIdAndUpdate(a,{$inc:{requestReceived:1}},{new:!0}));case 15:r.status(201).json(i);case 16:case"end":return e.stop()}})}),getAllRequest=asyncHandler(function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Request.find({$or:[{sender:t.user._id},{receiver:t.user._id}]}).populate("sender").populate("receiver").sort({createdAt:-1}));case 3:if(n=e.sent)return e.abrupt("return",r.status(200).json(n));e.next=6;break;case 6:e.next=12;break;case 8:throw e.prev=8,e.t0=e.catch(0),r.status(404),new Error(e.t0);case 12:case"end":return e.stop()}},null,null,[[0,8]])}),getRequestSendTransaction=asyncHandler(function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Request.find({sender:t.user._id}).sort({createdAt:-1}).populate([{path:"sender",select:"name image"},{path:"receiver",select:"name image"}]));case 2:if(!(n=e.sent)){e.next=7;break}r.status(200).json(n),e.next=9;break;case 7:throw r.status(400),new Error("No requests sent");case 9:case"end":return e.stop()}})}),getRequestReceivedTransaction=asyncHandler(function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Request.find({receiver:t.user._id}).sort({createdAt:-1}).populate([{path:"sender",select:"name image"},{path:"receiver",select:"name image"}]));case 2:if(!(n=e.sent)){e.next=7;break}r.status(200).json(n),e.next=9;break;case 7:throw r.status(400),new Error("No requests received");case 9:case"end":return e.stop()}})}),updateRequestStats=asyncHandler(function(t,r){var n,a,s,u,c,i,o,d,p,l,R;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=t.body,a=n._id,s=n.sender,u=n.receiver,c=n.amount,i=n.transactionType,o=n.reference,d=n.status,e.prev=1,"accepted"===d)return e.next=5,regeneratorRuntime.awrap(Transaction.create({sender:s,receiver:u,amount:c,transactionType:i,transactionId:crypto.randomBytes(5).toString("hex"),reference:o}));e.next=15;break;case 5:return p=e.sent,e.next=8,regeneratorRuntime.awrap(User.findByIdAndUpdate(s,{$inc:{balance:-c}}));case 8:return e.next=10,regeneratorRuntime.awrap(User.findByIdAndUpdate(u,{$inc:{balance:c}}));case 10:return e.next=12,regeneratorRuntime.awrap(Request.findByIdAndUpdate(a,{status:d},{new:!0}));case 12:return e.abrupt("return",r.status(201).json(p));case 15:if("denied"===d)return e.next=18,regeneratorRuntime.awrap(Request.findByIdAndUpdate(a,{status:"denied"},{new:!0}));e.next=22;break;case 18:return l=e.sent,e.abrupt("return",r.status(200).json({message:"Request denied",updatedRequest:l}));case 22:if("pending"===d)return e.next=25,regeneratorRuntime.awrap(Request.findByIdAndUpdate(a,{status:"pending"},{new:!0}));e.next=29;break;case 25:return R=e.sent,e.abrupt("return",r.status(200).json({message:"Marked as pay later",updatedRequest:R}));case 29:throw r.status(400),new Error("Invalid status update");case 31:e.next=37;break;case 33:throw e.prev=33,e.t0=e.catch(1),r.status(404),new Error(e.t0.message||"Error updating request status");case 37:case"end":return e.stop()}},null,null,[[1,33]])});module.exports={requestAmount:requestAmount,getAllRequest:getAllRequest,updateRequestStats:updateRequestStats,getRequestSendTransaction:getRequestSendTransaction,getRequestReceivedTransaction:getRequestReceivedTransaction};
//# sourceMappingURL=requestController.min.js.map
