"use strict";var asyncHandler=require("express-async-handler"),User=require("../models/userModal"),Transaction=require("../models/transactionModal"),crypto=require("crypto"),transferAmount=asyncHandler(function(r,n){var t,a,s,o,c,i,u,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.body,a=t.amount,s=t.sender,o=t.receiver,c=t.transactionType,i=t.reference,e.next=3,regeneratorRuntime.awrap(User.findById(o));case 3:if(u=e.sent,r.user._id==s&&u&&1==r.user.isVerified&&u.isVerified){e.next=9;break}throw n.status(400),new Error("sender not verified or loggedin or receiver not found");case 9:if(a&&s&&o&&c&&i){e.next=12;break}throw n.status(400),new Error("please include all fields");case 12:return e.next=14,regeneratorRuntime.awrap(Transaction.create({amount:a,sender:s,receiver:o,transactionType:c,reference:i,transactionId:crypto.randomBytes(5).toString("hex")}));case 14:return d=e.sent,e.next=17,regeneratorRuntime.awrap(d.save());case 17:return e.next=19,regeneratorRuntime.awrap(User.findByIdAndUpdate(s,{$inc:{balance:-a}}));case 19:return e.next=21,regeneratorRuntime.awrap(User.findByIdAndUpdate(o,{$inc:{balance:a}}));case 21:return e.next=23,regeneratorRuntime.awrap(User.findByIdAndUpdate(s,{$inc:{moneySend:1}},{new:!0}));case 23:return e.next=25,regeneratorRuntime.awrap(User.findByIdAndUpdate(o,{$inc:{moneyReceived:1}},{new:!0}));case 25:if(!d){e.next=29;break}n.status(201).send({_id:d._id,amount:d.amount,sender:d.sender,receiver:d.receiver,transactionType:d.transactionType,reference:d.reference,transactionId:d.transactionId}),e.next=31;break;case 29:throw n.status(404),new Error("not created transfer");case 31:case"end":return e.stop()}})}),verifyReceiver=asyncHandler(function(r,n){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(User.findOne({_id:r.body.receiver}));case 3:if(!(t=e.sent)){e.next=8;break}n.status(200).json(t),e.next=10;break;case 8:throw n.status(404),new Error("receiver not found");case 10:e.next=16;break;case 12:throw e.prev=12,e.t0=e.catch(0),n.status(404),new Error(e.t0);case 16:case"end":return e.stop()}},null,null,[[0,12]])}),getTransactions=asyncHandler(function(r,n){var t,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.params.id,console.log(t),e.next=4,regeneratorRuntime.awrap(Transaction.find({$or:[{sender:t},{receiver:t}]}).sort({createdAt:-1}).populate([{path:"sender",select:"name image"},{path:"receiver",select:"name image"}]));case 4:if(!(a=e.sent)){e.next=9;break}n.status(200).send(a),e.next=11;break;case 9:throw n.status(400),new Error("transaction not found");case 11:case"end":return e.stop()}})}),getMoneySendTransactions=asyncHandler(function(r,n){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Transaction.find({sender:r.user._id}).sort({createdAt:-1}).populate([{path:"sender",select:"name image"},{path:"receiver",select:"name image"}]));case 2:if(!(t=e.sent)){e.next=7;break}n.status(200).send(t),e.next=9;break;case 7:throw n.status(400),new Error("transactions not found");case 9:case"end":return e.stop()}})}),getMoneyReceiveTransactions=asyncHandler(function(r,n){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Transaction.find({receiver:r.user._id}).sort({createdAt:-1}).populate([{path:"sender",select:"name image"},{path:"receiver",select:"name image"}]));case 2:if(!(t=e.sent)){e.next=7;break}n.status(200).send(t),e.next=9;break;case 7:throw n.status(400),new Error("transactions not found");case 9:case"end":return e.stop()}})}),deposit=asyncHandler(function(r,n){var t,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.body.amount,console.log(t),e.next=4,regeneratorRuntime.awrap(User.findById(r.user._id));case 4:if(a=e.sent)return e.next=8,regeneratorRuntime.awrap(User.findByIdAndUpdate(a._id,{$inc:{balance:t}},{new:!0}));e.next=11;break;case 8:n.status(200).json({msg:"â‚¹".concat(t," added to your account")}),e.next=13;break;case 11:throw n.status(400),new Error("user not found");case 13:case"end":return e.stop()}})});module.exports={transferAmount:transferAmount,getTransactions:getTransactions,verifyReceiver:verifyReceiver,getMoneySendTransactions:getMoneySendTransactions,getMoneyReceiveTransactions:getMoneyReceiveTransactions,deposit:deposit};
//# sourceMappingURL=transactionController.min.js.map
